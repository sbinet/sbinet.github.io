<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gonum on 0xb1ns&gt;&gt; go run</title>
    <link>https://sbinet.github.io/categories/gonum/</link>
    <description>Recent content in Gonum on 0xb1ns&gt;&gt; go run</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 09 Oct 2017 11:11:11 +0200</lastBuildDate>
    
	<atom:link href="https://sbinet.github.io/categories/gonum/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction to Minimization with Gonum</title>
      <link>https://sbinet.github.io/posts/2017-10-09-intro-to-minimization/</link>
      <pubDate>Mon, 09 Oct 2017 11:11:11 +0200</pubDate>
      
      <guid>https://sbinet.github.io/posts/2017-10-09-intro-to-minimization/</guid>
      <description>Switching gears a bit with regard to last week, let&amp;rsquo;s investigate how to perform minimization with Gonum.
In High Energy Physics, there is a program to calculate numerically:
 a function minimum of F(a) of parameters a_i (with up to 50 parameters), the covariance matrix of these parameters the (asymmetric or parabolic) errors of the parameters from F_min+∆ for arbitrary ∆ the contours of parameter pairs a_i,a_j.  This program is called MINUIT and was originally written by Fred JAMES in FORTRAN.</description>
    </item>
    
    <item>
      <title>Introduction to Statistics With Gonum</title>
      <link>https://sbinet.github.io/posts/2017-10-04-intro-to-stats-with-gonum/</link>
      <pubDate>Wed, 04 Oct 2017 11:17:11 +0200</pubDate>
      
      <guid>https://sbinet.github.io/posts/2017-10-04-intro-to-stats-with-gonum/</guid>
      <description>Starting a bit of a new series (hopefully with more posts than with the interpreter ones) about using Gonum to apply statistics.
This first post is really just a copy-paste of this one:
https://mubaris.com/2017-09-09/introduction-to-statistics-using-numpy
but using Go and Gonum instead of Python and numpy.
Go &amp;amp; Gonum Gonum is &amp;ldquo;a set of packages designed to make writing numeric and scientific algorithms productive, performant and scalable.&amp;rdquo;
Before being able to use Gonum, we need to install Go.</description>
    </item>
    
  </channel>
</rss>